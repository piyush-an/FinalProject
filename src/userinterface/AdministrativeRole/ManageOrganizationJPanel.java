/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministrativeRole;

import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Enterprise.AwarenessCamp;
import Business.Enterprise.DonorFamilySupport;
import Business.Enterprise.OrganBankEnterprise;

import Business.Organization.Organization;
import Business.Organization.Organization.Type;
import Business.Organization.OrganizationDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ManageOrganizationJPanel extends javax.swing.JPanel {

    private OrganizationDirectory directory;
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    
    /**
     * Creates new form ManageOrganizationJPanel
     */
    public ManageOrganizationJPanel(JPanel userProcessContainer,OrganizationDirectory directory,Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.directory = directory;
        this.enterprise= enterprise;
        
        populateTable();
        populateCombo();
    }
    
    private void populateCombo(){
        organizationJComboBox.removeAllItems();
        for (Type type : Organization.Type.values()){

            if (!type.getValue().equals(Type.Admin.getValue())){
             if(enterprise instanceof HospitalEnterprise){
                 if(type.toString().equals("Doctor") || type.toString().equals("Lab") || type.toString().equals("Patient")){
                 organizationJComboBox.addItem(type);}
             }
             if(enterprise instanceof OrganBankEnterprise){
                 if(type.toString().equals("OrganTissueDonationOrganization")){
                 organizationJComboBox.addItem(type);}
                 
             }
              if(enterprise instanceof AwarenessCamp){
                 if(type.toString().equals("AwarnessEventManagementOrganization") || type.toString().equals("HealthCampOrganization") ){
                 organizationJComboBox.addItem(type);}
                 
             }
              if(enterprise instanceof DonorFamilySupport){
                 if(type.toString().equals("EmotionalOrganization") || type.toString().equals("LegalOrganization") ){
                 organizationJComboBox.addItem(type);}
                 
             }
              
                
            }
        }
    }

    private void populateTable(){
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();
        
        model.setRowCount(0);
        
        for (Organization organization : directory.getOrganizationList()){
            Object[] row = new Object[3];
            row[0] = organization.getOrganizationID();
            row[1] = organization;
            row[2] = organization.getTypeof();
            
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        addJButton = new javax.swing.JButton();
        organizationJComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtOrgName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Name", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);
        if (organizationJTable.getColumnModel().getColumnCount() > 0) {
            organizationJTable.getColumnModel().getColumn(0).setResizable(false);
            organizationJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 970, 180));

        addJButton.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        addJButton.setForeground(new java.awt.Color(4, 65, 96));
        addJButton.setText("Add Organization");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });
        add(addJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 490, -1, -1));

        add(organizationJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 370, 220, -1));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(4, 65, 96));
        jLabel1.setText("Organization Type: ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 380, 200, -1));

        backJButton.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        backJButton.setForeground(new java.awt.Color(4, 65, 96));
        backJButton.setText("HOME");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 140, -1));

        btnDelete.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(4, 65, 96));
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 60, 130, -1));

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(4, 65, 96));
        jLabel2.setText("Organization Name: ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 430, 210, -1));
        add(txtOrgName, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 420, 220, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/AdministrativeRole/mo.jpg"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, -100, -1, 830));
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed

        int newID = enterprise.getOrganizationDirectory().getOrganizationList().get(enterprise.getOrganizationDirectory().getOrganizationList().size() -1).getOrganizationID() ;
        Type type = (Type) organizationJComboBox.getSelectedItem();
        String orgName = txtOrgName.getText();
        directory.createOrganization(type, orgName, newID);
        populateTable();
    }//GEN-LAST:event_addJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = organizationJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "No Row Selected, Please select one");
            return;
        }
        Organization organizationtoDelete = (Organization) organizationJTable.getValueAt(selectedRow, 1);
        if(enterprise.getOrganizationDirectory().getOrganizationList().remove(organizationtoDelete)){
            JOptionPane.showMessageDialog(null, "Organization Deleted");
        } else {
            JOptionPane.showMessageDialog(null, "Organization could NOT be Deleted");
        }
            populateTable();
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnDelete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JTable organizationJTable;
    private javax.swing.JTextField txtOrgName;
    // End of variables declaration//GEN-END:variables
}
